{{- if gt .Values.green.replicas 0.0 -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "podinfo-istio.green" . }}
  labels:
    app: {{ template "podinfo-istio.fullname" . }}
    chart: {{ template "podinfo-istio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    color: green
    version: {{ .Values.green.tag }}
spec:
  replicas: {{ .Values.green.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "podinfo-istio.fullname" . }}
      color: green
  template:
    metadata:
      labels:
        app: {{ template "podinfo-istio.fullname" . }}
        color: green
        version: {{ .Values.green.tag }}
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: podinfod
          image: "{{ .Values.green.repository }}:{{ .Values.green.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - ./podinfo
            - --port={{ .Values.containerPort }}
            - --level={{ .Values.logLevel }}
            - --random-delay={{ .Values.green.faults.delay }}
            - --random-error={{ .Values.green.faults.error }}
          env:
          - name: PODINFO_UI_COLOR
            value: green
          {{- if .Values.green.backend }}
          - name: PODINFO_BACKEND_URL
            value: {{ .Values.green.backend }}
          {{- end }}
          {{- if .Values.green.message }}
          - name: PODINFO_UI_MESSAGE
            value: {{ .Values.green.message }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.containerPort }}
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.containerPort }}
            periodSeconds: 3
          volumeMounts:
          - name: data
            mountPath: /data
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: data
        emptyDir: {}
{{- end }}
